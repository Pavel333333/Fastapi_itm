# MODE обязателен для каждой job: "TEST" для тестов, "DEV" для деплоя

stages:
  - build
  - test
  - deploy

# Build job: Сборка Docker-образа
build-job:
  stage: build
  script:
    - docker build -t app_fastapi_itm .
  tags:
    - fastapi_itm
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

# Test job: Запуск тестов
test-job:
  stage: test
  script:
    - docker compose down -v  # Очистка перед запуском, если что-то осталось
    - docker compose up -d test_db app_fastapi celery
    - sleep 21
    - pytest tests/
    - docker compose down -v  # Очистка после тестов
  variables:
    MODE: "TEST"
    TEST_DB_HOST: "container_fastapi_db_test"
    TEST_DB_PORT: "5434"
    TEST_DB_NAME: "fastapi_itm_test"
    RABBITMQ_HOST: "container_fastapi_rabbitmq"
    RABBITMQ_USER: "admin"
    RABBITMQ_PASS: "admin"
    APP_URL: "http://localhost:3333"
  tags:
    - fastapi_itm
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

# Deploy job: Развертывание приложения
deploy-job:
  stage: deploy
  script:
    - ssh pavel@82.202.138.125 "cd /home/pavel/dev/fastapi_itm && docker compose down && docker image prune -f && docker network prune -f && MODE=$MODE DB_HOST=$DB_HOST DB_PORT=$DB_PORT DB_NAME=$DB_NAME RABBITMQ_HOST=$RABBITMQ_HOST RABBITMQ_USER=$RABBITMQ_USER RABBITMQ_PASS=$RABBITMQ_PASS APP_URL=$APP_URL docker compose up -d --build"
  variables:
    MODE: "DEV"
    DB_HOST: "container_fastapi_db"
    DB_PORT: "5433"
    DB_NAME: "fastapi_itm_db"
    RABBITMQ_HOST: "container_fastapi_rabbitmq"
    RABBITMQ_USER: "admin"
    RABBITMQ_PASS: "admin"
    APP_URL: "http://localhost:3333"
  tags:
    - fastapi_itm
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'