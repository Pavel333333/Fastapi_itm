stages: [.pre, build, test, deploy, .post]  # Определяем все стадии

build-job:
  stage: build  # Стадия сборки образа
  script:
    - docker info  # Проверка состояния Docker
    - docker build -t app_fastapi_itm .  # Сборка образа
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'  # Запуск только на ветке main

test-job:
  stage: test  # Стадия тестирования
  script:
    - docker stop fastapi_test || true && docker rm fastapi_test || true  # Остановка и удаление старого контейнера
    - echo "DATABASE_URL=postgres://test_user:test_pass@test_db:5432/test_db" > .env-not-dev  # Создание временного .env
    - docker compose up -d test_db  # Запуск тестовой базы
    - |
      docker run --rm \
        -e DATABASE_URL=postgres://test_user:test_pass@test_db:5432/test_db \
        -e ALEMBIC_SQLALCHEMY_URL=postgres://test_user:test_pass@test_db:5432/test_db \
        -e MODE=TEST \
        -e DB_USER=dummy_user \
        -e DB_PASSWORD=dummy_pass \
        -e DB_HOST=dummy_host \
        -e DB_PORT=5432 \
        -e DB_NAME=dummy_db \
        -e RABBITMQ_HOST=dummy_host \
        -e RABBITMQ_USER=dummy_user \
        -e RABBITMQ_PASS=dummy_pass \
        -e TEST_DB_USER=test_user \
        -e TEST_DB_PASSWORD=test_pass \
        -e TEST_DB_HOST=test_db \
        -e TEST_DB_PORT=5432 \
        -e TEST_DB_NAME=test_db \
        --network fastapi_default \
        app_fastapi_itm \
        sh -c "curl -sSL https://github.com/vishnubob/wait-for-it/raw/master/wait-for-it.sh -o /usr/local/bin/wait-for-it && \
               chmod +x /usr/local/bin/wait-for-it && \
               sleep 15 && \
               wait-for-it test_db:5432 --timeout=60 -- alembic upgrade head && \
               pytest -v"
    - docker compose down  # Остановка тестовой базы
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'  # Запуск только на ветке main

deploy-job:
  stage: deploy  # Стадия деплоя
  environment: production
  script:
    - apk add openssh-client  # Установка SSH клиента
    - eval $(ssh-agent -s)  # Запуск SSH агента
    - cat "$SSH_PRIVATE_KEY" | ssh-add -  # Добавление SSH ключа
    - mkdir -p ~/.ssh && ssh-keyscan -H 176.123.165.243 >> ~/.ssh/known_hosts  # Настройка известных хостов
    - scp docker-compose.yml admin@176.123.165.243:/home/admin/fastapi_itm/  # Копирование docker-compose.yml
    - ssh admin@176.123.165.243 "cd /home/admin/fastapi_itm && echo DATABASE_URL=\$DATABASE_URL > .env-not-dev"  # Создание .env-not-dev
    - ssh admin@176.123.165.243 "cd /home/admin/fastapi_itm && echo RABBITMQ_URL=\$RABBITMQ_URL >> .env-not-dev"  # Добавление переменной
    - ssh admin@176.123.165.243 "cd /home/admin/fastapi_itm && docker compose down && docker compose up -d --build"  # Перезапуск сервисов
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'  # Запуск только на ветке main