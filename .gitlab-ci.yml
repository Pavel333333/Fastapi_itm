stages:
  - build
  - test
  - deploy

build-job:
  stage: build
  script:
    - docker build -t app_fastapi_itm .
  tags:
    - fastapi_itm
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

test-job:
  stage: test
  script:
    - docker compose down -v
    # - docker build --no-cache -t app_fastapi_itm .
    # - echo "TEST_DB_USER=$TEST_DB_USER, TEST_DB_PASSWORD=$TEST_DB_PASSWORD, TEST_DB_NAME=$TEST_DB_NAME"
    - MODE=$MODE TEST_DB_HOST=$TEST_DB_HOST TEST_DB_PORT=$TEST_DB_PORT TEST_DB_NAME=$TEST_DB_NAME TEST_DB_USER=$TEST_DB_USER TEST_DB_PASSWORD=$TEST_DB_PASSWORD DB_HOST=$DB_HOST DB_PORT=$DB_PORT DB_NAME=$DB_NAME DB_USER=$DB_USER DB_PASSWORD=$DB_PASSWORD RABBITMQ_HOST=$RABBITMQ_HOST RABBITMQ_USER=$RABBITMQ_USER RABBITMQ_PASS=$RABBITMQ_PASS RABBITMQ_VHOST=$RABBITMQ_VHOST APP_URL=$APP_URL docker compose up -d test_db app_fastapi celery
    - sleep 10
    # - docker ps -a
    # - docker logs container_fastapi_db_test
    # - docker exec container_fastapi_app bash -c "timeout 10 bash -c 'until </dev/tcp/container_fastapi_db_test/5432; do sleep 1; done' && echo 'Port 5432 accessible' || echo 'Port 5432 not accessible'"
    # - docker exec container_fastapi_celery bash -c "timeout 10 bash -c 'until </dev/tcp/container_fastapi_rabbitmq/5672; do sleep 1; done' && echo 'Port 5672 accessible' || echo 'Port 5672 not accessible'"
    # - docker logs container_fastapi_app
    # - docker logs container_fastapi_celery
    # - docker exec container_fastapi_app bash -c "echo \$PWD"
    - docker exec container_fastapi_app pytest -s -v
    - docker compose down -v
  variables:
    MODE: "TEST"
    TEST_DB_HOST: "container_fastapi_db_test"
    TEST_DB_PORT: "5432"
    TEST_DB_NAME: "fastapi_itm_test"
    TEST_DB_USER: "$TEST_DB_USER"
    TEST_DB_PASSWORD: "$TEST_DB_PASSWORD"
    DB_HOST: "container_fastapi_db"
    DB_PORT: "5433"
    DB_NAME: "fastapi_itm_db"
    DB_USER: "$DB_USER"
    DB_PASSWORD: "$DB_PASSWORD"
    RABBITMQ_HOST: "container_fastapi_rabbitmq"
    RABBITMQ_USER: "admin"
    RABBITMQ_PASS: "admin"
    RABBITMQ_VHOST: "fastapi_itm_vhost"
    APP_URL: "http://localhost:3333"
  tags:
    - fastapi_itm
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

deploy-job:
  stage: deploy
  script:
    - docker compose down
    - docker image prune -f
    - MODE=$MODE DB_HOST=$DB_HOST DB_PORT=$DB_PORT DB_NAME=$DB_NAME RABBITMQ_HOST=$RABBITMQ_HOST RABBITMQ_USER=$RABBITMQ_USER RABBITMQ_PASS=$RABBITMQ_PASS APP_URL=$APP_URL docker compose up -d --build app_fastapi celery
  variables:
    MODE: "DEV"
    TEST_DB_HOST: "container_fastapi_db_test"
    TEST_DB_PORT: "5432"
    TEST_DB_NAME: "fastapi_itm_test"
    TEST_DB_USER: "$TEST_DB_USER"
    TEST_DB_PASSWORD: "$TEST_DB_PASSWORD"
    DB_HOST: "container_fastapi_db"
    DB_PORT: "5432"
    DB_NAME: "fastapi_itm_db"
    DB_USER: "$DB_USER"
    DB_PASSWORD: "$DB_PASSWORD"
    RABBITMQ_HOST: "container_fastapi_rabbitmq"
    RABBITMQ_USER: "admin"
    RABBITMQ_PASS: "admin"
    RABBITMQ_VHOST: "fastapi_itm_vhost"
    APP_URL: "http://localhost:3333"
  tags:
    - fastapi_itm
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'