stages:
  - build
  - test

# Простой тестовый job для проверки Docker
build-job:
  stage: build
  script:
    - docker info  # Проверяем, работает ли Docker
    - docker build -t app_fastapi_itm .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

test-job:
  stage: test
  script:
    # Очистка старых контейнеров
    - docker stop fastapi_test || true
    - docker rm fastapi_test || true
    # Запуск тестовой базы
    - echo "DATABASE_URL=postgres://test_user:test_pass@localhost:5433/test_db" > .env-not-dev
    - docker compose up -d test_db
    # Запуск тестов в foreground режиме
    - docker run --name fastapi_test --network fastapi_default -e DATABASE_URL=postgres://test_user:test_pass@test_db:5432/test_db -e MODE=TEST app_fastapi_itm sh -c "sleep 5 && wait-for-it test_db:5432 --timeout=60 -- alembic upgrade head && pytest -s -v"
    # Очистка
    - docker rm -f fastapi_test || true
    - docker compose down
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

